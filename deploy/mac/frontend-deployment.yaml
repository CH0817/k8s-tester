apiVersion: apps/v1
kind: Deployment
metadata:
  # deployment 名稱，在相同 namespace 中必須是唯一
  name: k8s-frontend-deployment
  # 設定資源標籤 {key : value}
  labels:
    app: k8s-frontend
spec:
  # 建立副本數量
  replicas: 1
  # 選擇器
  selector:
    # 選擇器匹配標籤
    matchLabels:
      app: k8s-frontend
  # 模板
  template:
    metadata:
      # 設定資源標籤，必須與 spec.selector.matchLabels 相同
      labels:
        app: k8s-frontend
    spec:
      # 容器
      containers:
        # 容器名稱
        - name: k8s-frontend
          # 使用的 docker image
          image: chenhang0817/k8s-frontend-m1:v1
          # pod 拉取 image 的策略，有 Always、Never、IfNotPresent
          imagePullPolicy: IfNotPresent
          ports:
            # 容器對外的 port
            - containerPort: 8080
      # docker service 密鑰
      imagePullSecrets:
        - name: my-harbor
---
apiVersion: v1
kind: Service
metadata:
  # service 名稱，在相同 namespace 中必須是唯一
  name: k8s-frontend-service
spec:
  # service 類型，有 ClusterIP、NodePort、LoadBalancer、ExternalName 四種，預設為 ClusterIP
  type: ClusterIP
  # type: NodePort
  # 選擇器，選擇指定 label 標籤的 pod 作控管
  selector:
    # 指定 label，必須與 Deployment 的 spec.selector.matchLabels 匹配
    app: k8s-frontend
  # service 要暴露的 port
  ports:
    # 名稱
    - name: http
      # 協議，有 TCP、UPD，預設為 TCP
      protocol: TCP
      # service 監聽的 port
      port: 8080
      # 轉發到後端的 port
      targetPort: 8080
      # type: NodePort 時，指定到實體機的 port
      # nodePort: 30001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: k8s-frontend-ingress
  namespace: default
spec:
  rules:
    - host: frontend.k8s.tester.com.tw
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: k8s-frontend-service
                port:
                  number: 8080
  ingressClassName: nginx